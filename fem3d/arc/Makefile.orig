#
# $Id: Makefile,v 1.54 2008-04-11 16:05:37 georg Exp $
#

#------------------------------------------------------------

DIR	= fem3d

DEFDIR  = $(HOME)
#dos#DEFDIR  = /fem
FEMDIR  = ..
DISTDIR  = $(FEMDIR)/femdist
DIRLIB  = $(FEMDIR)/femlib
XLIBDIR = -L/usr/X11/lib -L/usr/X11R6/lib

REMOTEDIR = /net/lagoon/usr/users/georg/fem/$(DIR)
LOCALDIR  = $(FEMDIR)/$(DIR)
UPFILES   = *.[fh] $(SPECIAL)

ACTDATE = `date`
#------------------------------------------------------------

LIBGRAP = -L$(DIRLIB) -lgrappa
LIBX    = -lXt -lX11

LIBFEM  = fem
LIBGRA  = gra

LIBFFEM = $(DIRLIB)/lib$(LIBFEM).a
DLIBFFEM = $(DIRLIB)/libd$(LIBFEM).a

LIBGS   = -L$(DIRLIB) -l$(LIBFEM) -l$(LIBGRA) -l$(LIBFEM)
LIBIGS  = $(DIRLIB)/lib$(LIBFEM).a  $(DIRLIB)/lib$(LIBGRA).a

#------------------------------------------------------------

##############################################
#
# GNU compiler (g77 or f77)
#

F77	= pgf90
F77	= f77
#F77	= g95
LINKER	= $(F77)

# use -r8 for double precision

# use next only for digital fortran with problems with cpp

FFOLD  = -old_f77
FFOLD  =

FFLAGS = -O
FFLAGS = -O -r8 -i8
FFLAGS = -g -O -static
FFLAGS = -g 
FFLAGS = -g -O -fautomatic
FFLAGS = -g -O -Wall -pedantic
FFLAGS = -g -O
#FFLAGS = -g -O3
#FFLAGS = -p -g -O

##############################################
#
# INTEL compiler
#
# -w    warnings
# -CU   run time exeption
# -dn   level n of diagnostics
# -O    optimization
# -i8   integer 8 byte (-i2 -i4 -i8)
# -r8   real 8 byte    (-r4 -r8 -r16)
#
#F77	= ifc
#F77	= ifort
#FFLAGS_NOOPT = -w
#FFLAGS_NOOPT = 
#FFLAGS_NOOPT = -w -CU -d1
#FFLAGS_NOOPT = -w -CU -d5
#FFLAGS = $(FFLAGS_NOOPT)
#FFLAGS = $(FFLAGS_NOOPT) -O 
#FFLAGS = $(FFLAGS_NOOPT) -O3

LINKER	= $(F77)

###########################################

###########################################
#
# profiling: use -p for linking ; example for hp
#
#   f77 -p -c subany.f ...     (links with profiling)
#   f77 -p -o hp ...     (links with profiling)
#   hp                   (creates mon.out)
#   prof hp              (elaborates mon.out)
#
###########################################

LFLAGS = 
LFLAGS = -O  -p
#LFLAGS =   -p
LFLAGS = -O 

###########################################
#
# lahey
#
#	help for options :
#		f77l3
#		386link
#		up l32 /help
#	remove kernel :
#		os386 /remove
#	compiler switches :
#		/R	remember local variables
#		/H	hardcopy listing
#		/S	create sold file .sld
#		/L	line-number traceback table
#		/O	output options
#
# compiler (all versions)

FLC             = f77l3
FLFLAGS         = /nO /nS /L /nR /nH

# linker lahey 3.01

LLINKER         = up l32
LDFLAGS         = /nocommonwarn /stack:5004
LDMAP           = nul
LLIBS		=
LDEXTRA		= ,$@,$(LDMAP),$(LLIBS) $(LDFLAGS);
EXE		= exp

# linker lahey 5.20

#LLINKER		= 386link
#LDFLAGS		= -stack 2000000 -fullsym
#LDEXTRA		= $(LDFLAGS)
#EXE    		= exe
#
###########################################

SPECIAL =	Makefile apnpar.str \
		COMMIT README TESTLOG TODO VERSION WARNINGS \
		ACTUAL LASTZIP LOG

EXES	= ht hp vp \
	  ousinf whdf whdfs \
	  zlevel ttt readext zinit wincrea outinf \
	  basinf flxinf wininf nosinf nossplit nosextr nosintp \
	  nosaver nosaverf nosmaniq nosextract \
	  splitext outintp volinf extinf bastreat basbathy baschk \
	  nosdiff nostransf mkgeom lagint splitflx \
	  laplap lapwin nosinit ousintp nosexport \
	  bascomp ousextr rstinf nosresidence ousaver ousvdiff \
	  nosextr_inter

#------------------------------------------------------------

# 3D objects for 3D model

NEWOBJS = \
	  new3di.o newpr.o \
	  newrog.o newcra.o \
	  newcon.o newbcl.o \
	  newini.o newchk.o newtra.o \
	  newbcl0.o \
	  newchao.o newparam.o \
	  newdum.o

# objects for library

SOBJS   = \
	  subnsv.o subsst.o \
          subcmv.o subdry.o subpar.o subssv.o \
          sublst.o subsys.o \
          subcst.o submir.o subros.o \
          subn11.o subsrt.o \
          subdef.o subext.o subssc.o \
          subbas.o subnev.o subdim.o \
          subnls.o subsse.o subwat.o \
          subfil.o subn35.o subout.o subous.o subssg.o \
          subfnm.o subnsh.o subssm.o subzzz.o \
          subnsu.o subsss.o subscn.o subres.o \
          subapn.o subnsa.o \
          subgrd.o subreg.o \
          subwin.o subbnd.o \
          subexta.o subouta.o subdep.o subflxa.o \
	  subdum.o subcus.o subdwq.o \
	  $(QFLUX) \
	  subnos.o subcon1.o subrnd.o sublin.o \
	  submod.o subuti.o subele.o subgeo.o subdts.o \
	  links.o sublnka.o sublnks.o sublnku.o subisd.o \
	  debug.o subhisto.o subnosa.o

# objects for 2D model

HPOBJS = \
	subver.o \
        sub555.o subn35.o subn11.o subini.o \
        subnsh.o subsys.o subcst.o subbnd.o \
        subdim.o subdep.o \
        sublnk.o subdry.o subnev.o \
        subwat.o subres.o \
        subcon.o \
        subdef.o \
        subnls.o \
        subpar.o subfnm.o \
        subfil.o \
        subout.o subext.o \
        subexta.o subouta.o subwin.o subbas.o \
        subsse.o \
        submir.o \
        subnsu.o \
        subsss.o subscn.o subssv.o subssm.o subcus.o subflxa.o \
	subn36.o subdwq.o \
	$(QFLUX) \
	subcon1.o subnos.o \
	subuti.o \
	flux.o matrix47.o matrix49.o \
	sublin.o subvola.o subgeo.o debug.o \
	bio2d.o weutro.o \
	submod.o subsed.o subele.o subbndo.o subc2d.o subbnds.o \
	bdist.o links.o

# general objects for 3D model

HTOBJS = \
	subver.o \
	subcst.o subsys.o subnsh.o \
	subbas.o subdim.o subnev.o \
	subnsu.o subn35.o subdep.o \
	subdef.o subfil.o subnls.o \
	subpar.o subfnm.o \
	subsss.o subscn.o subssv.o subsse.o subssm.o \
	submir.o \
	subext.o subexta.o \
	subous.o subousa.o \
	subbnd.o subnos.o \
	subwin.o \
	subflxa.o subwat.o subn11.o subdry.o \
	subcus.o subcon1.o \
	tideg.o tide1.o subzzz.o subres.o subuti.o \
	sublin.o subvola.o subgeo.o debug.o \
	submod.o subele.o \
	$(QFLUX) \
	subgotm.o $(GOTM_OBJ) \
	$(NETCDF_OBJ) \
	subbndo.o subbnds.o \
	weutro.o bio3d.o new36.o intp.o subssf.o \
	bdist.o links.o sublnka.o sublnks.o sublnku.o \
	sedi3d.o sedtrans05.o subwaves.o \
	subhisto.o \
	lagrange.o lagrange_in.o lagrback.o lagrange_dif.o lagrange_cont.o \
	weutro_sedim.o weutro_light.o subdts.o loading.o \
	subrst.o subnosa.o subdif.o subreg.o \
	atoxi3d.o atoxi.o subwwm.o kepsd.o keps_util.o \
	subinv.o newexpl.o subrnd.o

#	lagrange.o lagrange_in.o \
#	subout.o subouta.o \
#	bdist.o links.o sublnka.o sublnko.o sublnks.o sublnku.o
#	bdist.o links.o sublnk.o

#	haka0d.o bio3d.o

#	subgotm.o gotm3d.o

#	subflxa.o \
#	subres.o 

GOTM_OBJ = gotm3d.o
NETCDF_OBJ = subnetcdf_dummy.o

# objects for pre-processor vp

VPOBJS = \
        subros.o subcmv.o \
        subdef.o subbas.o subdim.o \
        subfil.o \
        subpar.o subfnm.o \
        subsrt.o subgrd.o \
        subsss.o subscn.o subnsu.o \
	subapn.o subnsa.o subnls.o subsys.o subdum.o subbnd.o

# objects for output routines

OUTOBJS = subpar.o subfnm.o subnls.o subsss.o subscn.o \
	  subfil.o subdef.o subnsu.o subssv.o \
	  subbas.o subsys.o subdim.o \
	  subapn.o subnsa.o subdum.o \
	  subbnd.o subdts.o subdep.o \
	  debug.o subreg.o subnev.o subrst.o

LAPLACE = sublpl.o submir.o subnos.o links.o sublnku.o \
	  subwin.o subnosa.o

# heat flux module

QFLUX = subqfxt.o \
	subqfxf.o \
	subqfxm1.o subqfxm2.o \
	subqfxu1.o subqfxu2.o subqfxu3.o subqfxu4.o

#QFLUX = subqfxa.o subqfx.o subqfx1.o	#old modules

# objects for interpolation

INTP    = subzzz.o subreg.o

# objects for lagrangian interpolation

LAGINTP = submir.o

# unsupported objects for old output routines

APOBJS  = subsss.o subscn.o subpar.o subfnm.o subnls.o subsys.o \
	  subdef.o subn66.o subn77.o

QOBJS   = qarea.o qfram.o qline.o qplos.o qplot.o qsymb.o qutil.o

HOBJS   = hcbsprix.o hcbscm84.o hcbsln03.o hcbstekx.o

#------------------------------------------------------------

SUBSOURCE = $(SOBJS:.o=.f)
HTSOURCE = $(HTOBJS:.o=.f)
HPSOURCE = $(HPOBJS:.o=.f)
FSOURCE = 

#------------------------------------- lahey
#NEWLOBJS = $(NEWOBJS:.o=.obj)
#HTLOBJS = $(HTOBJS:.o=.obj)
#------------------------------------- lahey

default:	ht

#--------------------------------------------- EXES

ht:  ht.o $(NEWOBJS) $(HTOBJS)
	$(LINKER) $(LFLAGS) ht.o $(NEWOBJS) $(HTOBJS) -o $@

hp:  hp.o $(HPOBJS)
	$(LINKER) $(LFLAGS) hp.o $(HPOBJS) -o $@

vp:  vp.o $(VPOBJS)
	$(LINKER) $(LFLAGS) vp.o $(VPOBJS) -o $@

#------------------------------------------------

all:	fem
fem:	libfem main info util 
#main:	hp ht vp
main:	ht vp
info:	outinf flxinf volinf basinf nosinf wininf extinf
util:	nosextr nossplit splitext ousinf splitflx laplap lapwin \
	nosinit bastreat basbathy nosextract nosextr_inter

adria:	param.adria ht vp readext nosinf nosextr nossplit nosintp
param.adria:
	@fupdate param.h adria.h

lagoon: param.lagoon test
param.lagoon:
	@fupdate param.h venlag.h

comune: param.comune ht vp readext flxinf volinf
param.comune:
	@fupdate param.h comune.h

taranto: param.taranto vp readext
param.taranto:
	@fupdate param.h taranto.h

lago: param.lago vp readext
param.lago:
	@fupdate param.h lago.h

param92: param.param92 vp readext
param.param92:
	@fupdate param.h param92.h

#------------------------------------------------

gotm3d.o: gotm3d.f gotmturb.i
	$(F77) -c $(FFLAGS_NOOPT) gotm3d.f

#------------------------------------------------

zlevel:  zlevel.o 
	$(LINKER) $(LFLAGS) zlevel.o -o $@

lagint:  lagint.o sublag.o $(LAGINTP) $(OUTOBJS)
	$(LINKER) $(LFLAGS) $@.o sublag.o $(LAGINTP) $(OUTOBJS) -o $@

readext:  readext.o subext.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) readext.o subext.o $(OUTOBJS) -o $@

splitext:  splitext.o subext.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) splitext.o subext.o $(OUTOBJS) -o $@

splitflx:  splitflx.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) splitflx.o $(OUTOBJS) -o $@

extinf:  extinf.o subext.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) extinf.o subext.o $(OUTOBJS) -o $@

flxinf:  flxinf.o subext.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) flxinf.o subext.o $(OUTOBJS) -o $@

volinf:  volinf.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) volinf.o $(OUTOBJS) -o $@

zinit:  zinit.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) zinit.o $(OUTOBJS) -o $@

wincrea:   wincrea.o
	$(LINKER) $(LFLAGS) wincrea.o -o $@

wininf:   wininf.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) wininf.o $(OUTOBJS) -o $@

mkgeom:   mkgeom.o
	$(LINKER) $(LFLAGS) mkgeom.o -o $@

cubic:   cubic.o $(OUTOBJS) subsse.o subssm.o
	$(LINKER) $(LFLAGS) cubic.o $(OUTOBJS) subsse.o subssm.o -o $@

#------------------------------------------------

basinf:  basinf.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) -o $@

baschk:  baschk.o subnev.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnev.o $(OUTOBJS) -o $@

bastreat:  bastreat.o subgeo.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subgeo.o $(OUTOBJS) -o $@

bascomp:  bascomp.o subgeo.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subgeo.o $(OUTOBJS) -o $@

basbathy:  basbathy.o subgeo.o subgrd.o subsrt.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subgeo.o subgrd.o subsrt.o $(OUTOBJS) -o $@

ousinf:  ousinf.o subous.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subous.o $(OUTOBJS) -o $@

ousextr:  ousextr.o subous.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subous.o $(OUTOBJS) -o $@

ousintp:  ousintp.o subous.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subous.o $(OUTOBJS) -o $@

ousaver:  ousaver.o subous.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subous.o $(OUTOBJS) -o $@

ousvdiff:  ousvdiff.o subous.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subous.o $(OUTOBJS) -o $@

nosinf:  nosinf.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

concinf:  concinf.o subnos.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosinf2:  nosinf2.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosextr:  nosextr.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosextr_inter:  nosextr_inter.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nossplit:  nossplit.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosaver:  nosaver.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosaverf:  nosaverf.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosresidence:  nosresidence.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosmaniq:  nosmaniq.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosextract:  nosextract.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nostransf:  nostransf.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosdiff:  nosdiff.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosdiff_deb:  nosdiff_deb.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosinit:  nosinit.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosexport:  nosexport.o subnos.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(OUTOBJS) -o $@

nosintp:  nosintp.o subnos.o $(INTP) $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subnos.o $(INTP) $(OUTOBJS) -o $@

outintp:  outintp.o subout.o $(INTP) $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o subout.o $(INTP) $(OUTOBJS) -o $@

outinf:   outinf.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) -o $@

outinfs:   outinfs.o $(OUTOBJS) 
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) -o $@

laplap:   laplap.o $(OUTOBJS) $(LAPLACE)
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) $(LAPLACE) -o $@ 

lapwin:   lapwin.o $(OUTOBJS) $(LAPLACE)
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) $(LAPLACE) -o $@ 

rstinf:   rstinf.o $(OUTOBJS)
	$(LINKER) $(LFLAGS) $@.o $(OUTOBJS) -o $@ 

#------------------------------------------------

# to test interpolation routines in intp.f

INTPOBJS = subsse.o subfil.o subsss.o subscn.o subssf.o subssm.o

intp:	intp.o $(INTPOBJS)
	$(LINKER) $(LFLAGS) $@.o $(INTPOBJS) -o $@ 

#------------------------------------------------

libs: libfem
femlib: libfem
libfem: $(LIBFFEM)

$(LIBFFEM): $(SOBJS)
	ar rvs $(LIBFFEM) $?
#	ranlib $(LIBFFEM)

dfemlib: dlibfem
dlibfem: $(DLIBFFEM)

$(DLIBFFEM): $(SOBJS)
	ar rvs $(DLIBFFEM) $?
#	ranlib $(DLIBFFEM)

#------------------------------------------------

headers:
	header *.[fh]

#-----------
#
# prof -pixie hp hp.Addrs hp.Counts

pixie:
	pixie -o hp.pixie hp
#	pixie -o ht.pixie ht

#------------------------------------------------

ttt:   ttt.o
	$(LINKER) $(LFLAGS) ttt.o $(XLIBDIR) $(LIBGRAP) $(LIBX) -o $@

#--------------------------------------------- EXES END

depend:
	makedepend $(FSOURCE)		#this only deletes last part of Mfile
	bin/include.pl -make *.f *.h

#---------------------------------------------------

cleanall: clean cleanzip cleanlib cleanextra

clean: cleanobj cleanexe cleanvar cleantex cleanlahey cleanexport cleandoc \
	cleanifc

cleanifc:
	-rm -f ifc*

cleanobj:
	-rm -f *.o

cleanexe:
	-rm -f $(EXES)
	-rm -f *.exp
	-rm -f *.exe

cleandoc:
	-rm -f *.html
	-rm -f head.txt revlog.txt

cleantex:
	-rm -f *.dvi *.aux

cleanlahey:
	-rm -fr lahey

cleanexport:
	-rm -fr export

cleanvar:
	-rm -f a.out core
	-rm -f *.bak *.tmp *.gnu
	-rm -f *.lst *.map
	-rm -f *~
	-rm -f ggg hhh
	-rm -f mon.out nohup.out
	-rm -f fort.*
	-rm -f errout.dat
	-rm -f out.ps out.*.ps
	-rm -f .memory _memory
	-rm -f html/cvs*
	-rm -fr cvsdiff_tmp
	-rm -f CVSSTATUS CVSRAWSTATUS
	-rm -f COMMONF COMMONL
	-rm -f gmon.out

cleanzip:
	-rm -f $(DIR).zip
	-rm -f save.zip

cleanlib:
	-rm -f $(LIBFFEM) $(DLIBFFEM)

cleanextra:
	-rm -f LASTZIP

#--------------------------------------------------

lahey:	cleanall
	bin/mklahey.sh
	cp $(SPECIAL) lahey
	bin/mklmake.pl Makefile > lahey/Makefile
	cp Makefile lahey/Makefile.org
	bin/unix2other.pl -lahey lahey/*.for
	cd lahey; rm -f *.for.bak
	cd lahey; zip -l lahey *

export:	cleanall
	bin/mkexport.sh
	cp $(SPECIAL) export
	cd export; zip export *

zip: save

save:   cleanall
	date > LASTZIP
	zip $(DIR) *.[fhi]
	zip $(DIR) $(SPECIAL)
	zip $(DIR) bin/*

list:
	pwd; ls

femsave: save
	mv $(DIR).zip $(DISTDIR)

strip:
	-strip $(EXES)

last:
	ls -latrd [A-Z]* Makefile *.[fh]

update-remote:
	@echo "================================================"
	@echo "================================================"
	@echo "You are updating the repository - Be caustious !"
	@echo "================================================"
	@echo "================================================"
	@diffs -d -n -s -u -C $(REMOTEDIR) $(UPFILES)

update:
	@cd $(REMOTEDIR); diffs -d -n -s -u -C $(LOCALDIR) $(UPFILES)
	@echo "last update $(ACTDATE)" > UPDATE

diffs-remote:
	@diffs -d -n -s $(REMOTEDIR) $(UPFILES)

diffs:
	@cd $(REMOTEDIR); diffs -d -n -s $(LOCALDIR) $(UPFILES)

#
# Rules ----------------------------------------------
#

.SUFFIXES: .F

.c.o:
	$(CC) -c $(CFLAGS) $*.c

.f.o:
	$(F77) $(FFOLD) -c $(FFLAGS) $<

#.F.o:
#	$(F77) $(FFOLD) -c -cpp $(FFLAGS) $<

.for.obj:
	$(FLC) $< , $(<,B).OBJ $(FLFLAGS)


# DO NOT DELETE THIS LINE -- make depend depends on it.

newbcl.o:  param.h 
subqfxf.o:  subqfx.h 
subwaves.o:  param.h 
sedtrans05.o:  sed_param.h 
nosinf.o:  param.h 
subres.o:  param.h 
subcus.o:  param.h 
nosmaniq.o:  param.h 
newchao.o:  param.h 
lagrange_in.o:  lagrange.h param.h 
basinf.o:  basinf.h 
atoxi3d.o:  param.h 
nosintp.o:  param.h 
bascomp.o:  basinf.h 
sedi3d.o:  param.h sed_param.h 
loading.o:  param.h 
nosaver.o:  param.h 
laplap.o:  basinf.h 
nosextract.o:  param.h 
subousa.o:  param.h 
bastreat.o:  basinf.h 
nosresidence.o:  param.h 
newcon.o:  param.h 
nosinit.o:  param.h 
gotm3d.o:  gotmturb.i 
concinf.o:  param.h 
subele.o:  param.h 
newchk.o:  param.h 
basbathy.o:  basinf.h 
subbndo.o:  subbndo.h 
newpr.o:  param.h 
subn11.o:  param.h 
subn35.o:  chezy.h param.h 
subvola.o:  modules.h 
baschk.o:  basinf.h 
ht.o:  param.h 
flux.o:  param.h regflux.h 
new3di.o:  param.h 
lagrange.o:  lagrange.h param.h 
lagrback.o:  lagrange.h param.h 
bdist.o:  param.h 
lagrange_dif.o:  lagrange.h param.h 
newtra.o:  param.h 
subexta.o:  modules.h 
weutro.o:  donata.h weutro.h 
subflxa.o:  modules.h 
subrst.o:  param.h 
matrix49.o:  regflux.h 
newini.o:  param.h 
weutro_sedim.o:  donata.h param.h weutro.h 
subgotm.o:  param.h 
nossplit.o:  param.h 
nosexport.o:  param.h 
nosextr.o:  param.h 
lapwin.o:  basinf.h 
subdif.o:  param.h 
subnsh.o:  modules.h 
newexpl.o: param.h
bio3d.o:  param.h 
outintp.o:  param.h 
subcst.o:  modules.h 
new36.o:  close.h 
subwwm.o: param.h
