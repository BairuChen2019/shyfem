#!/bin/sh
#
# starts post processing routine

######################################################### initialize

what=0
quiet="NO"

FEMDIR=${SHYFEMDIR:=$HOME/shyfem}

BINDIR=$FEMDIR/fembin
PLOTDIR=$FEMDIR/femplot

prog=$PLOTDIR/plotsim
CR=$BINDIR/CR
memory=$BINDIR/memory

logo_where=""
logo_file=$BINDIR/logo/logo.eps            #file to be included as logo

######################################################### routines

Usage() {
  echo "Usage: plots -what"
  echo "            [-quiet] [-vers] [-h|-help]"
  echo "            [-lev3d #] [-var #] [-time time] "
  echo "            [-sim simul] [-bas basin]"
  echo "            [-logo logo_where]"
  echo "            [control files]"
}

HelpLong() {
  Usage
  echo " "
  echo "  what           bath|vel|trans|zeta|conz|temp|salt"
  echo "                      |rms|wind|nos|lgr|wav|pres|elem"
  echo " "
  echo "     bath        bathymetry"
  echo "     vel         velocities"
  echo "     trans       transports"
  echo "     zeta        water levels"
  echo "     conz        generic concentration"
  echo "     temp        temperature"
  echo "     salt        salinity"
  echo "     rms         rms velocities"
  echo "     wind        wind field"
  echo "     nos         generic scalar value"
  echo "     lgr         lagrangian model"
  echo "     wav         wave parameters"
  echo "     pres        atmospheric pressure"
  echo "     elem        element values EOS"
  echo " "
  echo "  lev3d          level for 3d model (default 0 - vertical average)"
  echo "  var            type of scalar value"
  echo "  time           freq | itstart,itend | itstart,itend,freq"
  echo "  simul          simulation name"
  echo "  basin          basin name"
  echo "  logo_where     position to insert logo (see gpsinsert)"
  echo "  control files  str files to control output"
}

HelpShort() {
  Usage
  echo " "
  echo "  what           bath|vel|trans|zeta|conz|temp|salt"
  echo "                      |rms|wind|nos|lgr|wav|pres|elem"
  echo "  lev3d          level for 3d model (default 0 - vertical average)"
  echo "  var            type of scalar value"
  echo "  time           freq | itstart,itend | itstart,itend,freq"
  echo "  simul          simulation name"
  echo "  basin          basin name"
  echo "  logo_where     position to insert logo (see gpsinsert)"
  echo "  control files  str files to control output"
}

Version() {
  $prog < $CR 2> /dev/null | head -10
}

WriteTitle() {

  date=`date`

  if [ -z "$sim" ]; then
    sim=`memory -s`
  fi

  if [ -z "$bas" ]; then
    bas=`memory -b`
  fi

  echo '$title'
  echo "   automatically generated STR file from plots - $date"
  echo "   $sim"
  echo "   $bas"
  echo '$end'
}

WriteTime() {

  if [ $# -eq 1 ]; then
    echo "     nout = $1 "
  elif [ $# -eq 2 ]; then
    echo "     itanf = $1    itend = $2"
  elif [ $# -eq 3 ]; then
    echo "     itanf = $1    itend = $2     nout = $3"
  fi
}

WritePar() {

  if [ -n "$2" ]; then
    echo "     $1 = $2 "
  fi
}

WritePara() {

  times=`echo $time | sed -e 's/,/ /g'`

  echo '$para'
  echo "   iauto = 1    iwhat = $what "
  WritePar level $lev3d
  WritePar ivar $var
  WriteTime $times
  echo '$end'
}

######################################################### process arguments

while [ $# -gt 0 ]
do
  case $1 in
	-bath)  what=1;;
	-vel)   what=2;;
	-trans) what=3;;
	-level) what=4;;
	-zeta)  what=4;;
	-conz)  what=5;;
	-temp)  what=6;;
	-salt)  what=7;;
	-rms)   what=8;;
	-oxy)   what=9;;
	-nos)   what=10;;
	-wind)  what=11;;
	-lgr)   what=12;;
	-wav)   what=13;;
	-pres)  what=14;;
	-elem)  what=15;;
	-time)  time=$2; shift;;
	-lev3d) lev3d=$2; shift;;
	-var)   var=$2; shift;;
	-sim)   sim=$2; shift;;
	-bas)   bas=$2; shift;;
	-logo)  logo_where=$2; shift;;
	-quiet) quiet=YES;;
	-vers)  Version; exit 1;;
	-help)  HelpLong; exit 1;;
	-h)     HelpLong; exit 1;;
	 *)     break;;
  esac
  shift
done

######################################################### no arguments -> help

if [ $what = "0" ]; then
  HelpShort
  exit 1
fi

######################################################### gather input files

WriteTitle > apnstd.str
WritePara  >> apnstd.str

apnmake $* >> apnstd.str
[ $? -ne 0 ] && exit 1

######################################################### write to terminal

if [ $quiet = "NO" ]; then
  echo "sim=$sim bas=$bas what=$what time=$time var=$var lev3d=$lev3d"
fi

######################################################### run output routine

if [ $quiet = "NO" ]; then
  $prog 
else
  $prog > /dev/null
fi

######################################################### add logo

if [ -n "$logo_where" ]; then
  echo "inserting logo: $logo_where"
  $BINDIR/gpsinsert -relative "$logo_where" $logo_file plot.ps
  mv incl_plot.ps plot.ps
fi

######################################################### rename apnstd file

mv apnstd.str apnstd_.str

######################################################### end of script

